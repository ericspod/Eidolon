
[All]
# States which rendering system to use, only meaningful in Windows since elsewhere only OpenGL is available.
# Possible values: OpenGL (default), D3D9, D3D10, D3D11
RenderSystem=OpenGL
# RTT Preferred Mode configures which OpenGL extension to use when rendering to textures
# Possible values: FBO (default), PBuffer, Copy
RTT_Preferred_Mode=FBO
# Vertical screen sync, possible values: true (default), false
VSync=true
# Log file name in Eidolon's users data directory, default is eidolon.log
Logfile=eidolon.log
# Maximum number of processors to use when computing datasets/representations
maxprocs=8
# Default window size at start-up (actual size may be larger if necesary to fit UI components)
winsize=1200 800
# Comma-separated list of Ogre plugins to load, the shared object must be in the <app>/Libs/<platform>/bin directory
plugins=Plugin_CgProgramManager
# Qt style to base the UI look-and-feel on
uistyle=plastique
# Stylesheet used to define the interface look-and-feel, must be an absolute path or relative to the <app> directory 
stylesheet=res/DefaultUIStyle.css
# Sets the initial state of the camera's Z-axis locking: true (default), false
camerazlock=true
# Comma-separated list of scripts to load at runtime before any others specified on the command line (prefix with ./ to be relative to config file)
preloadscripts=
# render high quality for every frame by default
renderhighquality=true
# location of the per-user application data directory to create at startup if it doesn't exist, This file will be copied there and can be modified for per-user configuration
userappdir=~/.eidolon
# console log filename, to be stored in userappdir
consolelogfile=console.log
# how many lines of console logs to store in the log file
consoleloglen=10000
# try to use the Jupyter Qt console widget instead of the built-in console widget: true (default), false
usejupyter=true

[Windows]
# Windows specific config values

[Linux]
# Linux specific config values

[OSX]
# OSX specific config values

[Shaders]
# List of shaders/fragment programs to load, key is filename and value specifies type (fragment or vertex) and optionally list of profiles
BaseImage.cg=fragment
#BaseImage2D.cg=fragment
hijackVP.cg=vertex,arbvp1 vs_2_x
basicTex.cg=fragment
